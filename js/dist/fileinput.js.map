{"version":3,"sources":["../src/fileInput.js"],"names":[],"mappings":"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","file":"fileinput.js","sourcesContent":["import Util from './util'\n\n// FileInput decorator, to be called after Input\nconst FileInput = (($) => {\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n  const NAME = 'fileInput'\n  const DATA_KEY = `mdb.${NAME}`\n  const JQUERY_NO_CONFLICT = $.fn[NAME]\n\n  const Default = {}\n\n  const ClassName = {\n    IS_FILEINPUT: 'is-fileinput',\n    IS_EMPTY: 'is-empty'\n  }\n\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n  class FileInput {\n\n    constructor(element, config) {\n      this.element = element\n      this.config = $.extend({}, Default, config)\n      this.formGroup = Util.findFormGroup(this.element)\n\n      this.formGroup.addClass(ClassName.IS_FILEINPUT)\n\n      this._bindEventListeners()\n    }\n\n    dispose() {\n      $.removeData(this.element, DATA_KEY)\n      this.element = null\n      this.formGroup = null\n      this.config = null\n    }\n\n    // ------------------------------------------------------------------------\n    // private\n    _bindEventListeners() {\n      this.formGroup.on('focus', () => {\n          Util.addFormGroupFocus(this.formGroup)\n        })\n        .on('blur', () => {\n          Util.removeFormGroupFocus(this.formGroup)\n        })\n\n      // set the fileinput readonly field with the name of the file\n      this.element.on('change', () => {\n        let value = ''\n        $.each(this.element.files, (i, file) => {\n          value += `${file.name}  , `\n        })\n        value = value.substring(0, value.length - 2)\n        if (value) {\n          this._removeIsEmpty()\n        } else {\n          this._addIsEmpty()\n        }\n        this.formGroup.find('input.form-control[readonly]').val(value)\n      })\n    }\n\n    _addIsEmpty() {\n      this.formGroup.addClass(ClassName.IS_EMPTY)\n    }\n\n    _removeIsEmpty() {\n      this.formGroup.removeClass(ClassName.IS_EMPTY)\n    }\n\n    // ------------------------------------------------------------------------\n    // static\n    static _jQueryInterface(config) {\n      return this.each(function () {\n        let $element = $(this)\n        let data = $element.data(DATA_KEY)\n\n        if (!data) {\n          data = new FileInput(this, config)\n          $element.data(DATA_KEY, data)\n        }\n      })\n    }\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n  $.fn[NAME] = FileInput._jQueryInterface\n  $.fn[NAME].Constructor = FileInput\n  $.fn[NAME].noConflict = () => {\n    $.fn[NAME] = JQUERY_NO_CONFLICT\n    return FileInput._jQueryInterface\n  }\n\n  return FileInput\n\n})(jQuery)\n\nexport default FileInput\n"]}