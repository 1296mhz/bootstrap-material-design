// .mdb-layout-fixed-drawer is a marker that both header and content respond to.


//WARNING: VERY MUCH A WORK IN PROGRESS!!!!!!!!!!!!!!!!!!!!

.mdb-layout-container {
  position: absolute;
  width: 100%;
  height: 100%;

  // Main layout class.
  .mdb-layout {
    position: relative;
    display: flex;
    width: 100%;
    height: 100%;
    flex-direction: column; // allows for sticky header and footer
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
  }
}

// Header
.mdb-layout-header { // navbar
  // FIXME: it would be nice to stick this directly on the navbar, but navbars are not flex ready, so this is relegated to be a container at this time.
  z-index: 3;
  box-sizing: border-box;
  display: flex;
  width: 100%;
  max-height: 1000px;
  flex-direction: column;
  flex-wrap: nowrap;
  flex-shrink: 0;
  justify-content: flex-start;
  transition-property: max-height;

  > .navbar { // heights for common scenarios such as a header with a navbar

    // Current navbar is not flex enabled https://github.com/twbs/bootstrap/issues/18875
    //  - with flex a vertical align is a breeze
    //  - with standard layout, we need to use padding instead of height to layout.
    min-height: $mdb-layout-mobile-header-height;

    // FIXME: hack remove padding once the flex layout works properly
    $padding: ($mdb-layout-mobile-header-height - (1rem * $line-height)) / 2;
    padding-top: $padding;
    padding-bottom: $padding;

    @include media-breakpoint-up(lg) {
      min-height: $mdb-layout-desktop-header-height;

      // FIXME: hack remove padding once the flex layout works properly
      $padding: ($mdb-layout-desktop-header-height - (1rem * $line-height)) / 2;
      padding-top: $padding;
      padding-bottom: $padding;
    }
  }
}

// Drawer.
.mdb-layout-drawer {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 5;
  box-sizing: border-box;
  display: flex;
  height: 100%;
  max-height: 100%;

  flex-direction: column;
  flex-wrap: nowrap;
  overflow: visible;
  overflow-y: auto;
  color: $mdb-layout-text-color;
  background: $mdb-layout-drawer-bg-color;

  // Transform offscreen.
  transition: transform;
  will-change: transform;
  transform-style: preserve-3d;

  @include shadow-2dp();
  @include material-animation-default();

  > * {
    flex-shrink: 0;
  }

  .mdl-navigation {
    flex-direction: column;
    align-items: stretch;
    padding-top: 1rem;
  }
}

// Content.
.mdb-layout-content {
  position: relative;
  z-index: 1;
  display: inline-block;
  //-ms-flex: 0 1 auto; // Fix IE10 bug.
  overflow-x: hidden;
  overflow-y: auto;
  flex-grow: 1;
  -webkit-overflow-scrolling: touch; // TODO: why?
}


// FIXME: the below needs to happen if it is the right size OR if the drawer is visible.  Need to look at collapse or collapseInline to see if it can help us here.

// Responsive Header with fixed drawer
.mdb-layout-header {
  @include media-breakpoint-up(lg) {
    .mdb-layout-fixed-drawer > & {
      width: calc(100% - #{$mdb-layout-drawer-sm});
      margin-left: $mdb-layout-drawer-sm;
    }
  }
}

// Responsive Drawer Width
.mdb-layout-drawer {
  width: $mdb-layout-drawer-sm;
  transform: translateX(-$mdb-layout-drawer-sm - 10px); // initially way off screen

  //&.is-visible {
  //  transform: translateX(0);
  //  ~ .mdb-layout-content.mdb-layout-content {
  //    overflow: hidden;
  //  }
  //}

  @include media-breakpoint-up(lg) {
    .mdb-layout-fixed-drawer > & {
      transform: translateX(0);
    }
  }
}

// Responsive Content with fixed drawer
.mdb-layout-content {

  .mdb-layout-fixed-drawer > & {
    margin-left: 0;
  }

  @include media-breakpoint-up(lg) {
    .mdb-layout-fixed-drawer > & {
      margin-left: $mdb-layout-drawer-sm;
    }
  }
}


